-- begin CUBASDBMT_TENANT
alter table CUBASDBMT_TENANT add constraint FK_CUBASDBMT_TENANT_ACCESS_GROUP foreign key (ACCESS_GROUP_ID) references SEC_GROUP(ID)^
alter table CUBASDBMT_TENANT add constraint FK_CUBASDBMT_TENANT_ADMIN foreign key (ADMIN_ID) references SEC_USER(ID)^
create unique index IDX_CUBASDBMT_TENANT_UNIQ_TENANT_ID on CUBASDBMT_TENANT (TENANT_ID, DELETE_TS_NN)^
create unique index IDX_CUBASDBMT_TENANT_UK_ADMIN_ID on CUBASDBMT_TENANT (ADMIN_ID, DELETE_TS_NN)^
create unique index IDX_CUBASDBMT_TENANT_UK_ACCESS_GROUP_ID on CUBASDBMT_TENANT (ACCESS_GROUP_ID, DELETE_TS_NN)^
create unique index IDX_CUBASDBMT_TENANT_UK_NAME on CUBASDBMT_TENANT (NAME, DELETE_TS_NN)^
-- end CUBASDBMT_TENANT

create trigger CUBASDBMT_TENANT_DELETE_TS_NN_TRIGGER before update on CUBASDBMT_TENANT
for each row
	if not(NEW.DELETE_TS <=> OLD.DELETE_TS) then
		set NEW.DELETE_TS_NN = if (NEW.DELETE_TS is null, '1000-01-01 00:00:00.000', NEW.DELETE_TS);
	end if^